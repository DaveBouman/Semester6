version: "3.7"

services:

  user-service:
    build: ./userService
    container_name: user-service
    env_file:
      - ./userService/.env
    ports:
      - "3000:3000"
      # - "9229:9229"
    networks:
      - platform
    volumes:
      - ./userService:/src
    depends_on:
      - redis
      - placement

  user-service-dapr:
    image: "daprio/daprd:edge"
    container_name: user-service-dapr
    command: [
      "./daprd",
     "-app-id", "user-service-dapr",
     "-app-port", "3000",
     "-dapr-grpc-port","50002",
     "-dapr-http-port","53001",
     "-placement-host-address", "placement:50006",
     "-components-path", 
     "./components",
     ]
    networks:
      - platform
    depends_on:
      - user-service
    # network_mode: "service:user-service"

  # message-service:
  #   build: ./messageService
  #   hostname: message-service
  #   env_file:
  #     - ./messageService/.env
  #   ports:
  #     - "82:5000"
  #   networks:
  #     - platform
  #   volumes:
  #     - ./messageService:/src

  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    networks:
      - platform

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - platform

  database:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3305:3306"
    networks:
      - platform
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_USER: "admin"
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_PASSWORD: "admin"
      MYSQL_DATABASE: "test"

  admin:
    image: adminer
    restart: always
    networks:
      - platform
    ports:      
      - "8080:8080"
    depends_on:
      - database

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   container_name: zookeeper
  #   networks:
  #     - platform
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: wurstmeister/kafka
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - platform
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_LISTENERS: PLAINTEXT://kafka:9092 
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  # nginx:
  #   build: ./nginx
  #   ports:
  #   - "80:80"
  #   networks:
  #     - platform
  #   depends_on:
  #   - user-service
    # - message-service

networks:
  platform:

volumes:
  mysql-data:
  nodemodules: {}