version: "3"

services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  user-service:
    build: ./userService
    hostname: user-service
    env_file:
      - ./userService/.env
    ports:
      - "81:5000"
      - "9229:9229"
    volumes:
      - ./userService:/src

  auth-service:
    build: ./authService
    hostname: auth-service
    env_file:
      - ./authService/.env
    ports:
      - "82:5000"
    volumes:
      - ./authService:/src

  db:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_USER: "admin"
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_PASSWORD: "admin"
      MYSQL_DATABASE: "test"

  admin:
    image: adminer
    restart: always
    ports:      
      - "8080:8080"
    depends_on:
      - database

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092 
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  nginx:
    build: ./nginx
    ports:
    - "80:80"
    depends_on:
    - user-service
    - auth-service

volumes:
  mysql-data:
  nodemodules: {}